package practica;

import java.io.*;
import java.util.LinkedList;
import java.util.Scanner;

/*
 *  1.Escribe un programa que escriba los 100 primeros numeros naturales en un
 *	archivo numNaturales.txt.
 *
 *	2.Escribe un programa que reciba el nombre de un archivo que almacena una
 *	serie de cantidades enteras positivas e imprima su suma.
 *
 *  3.Escribir un metodo que reciba un array de cadenas de caracteres y vuelque
 *	su contenido a un archivo cuyo nombre tambien se recibira por parametro.
 *	Las cadenas quedaran separadas en el archivo por un asterisco.
 *
 *	4.Escribir un metodo que reciba por parametro el nombre de un archivo e
 *	imprima las cadenas que dicho archivo almacena (una cadena por linea). Se
 *	tendra en cuenta que las distintas cadenas se separan en el archivo por un
 *	asterisco (que no se imprimira).
 */

public class Practica {
	
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		
		int opt = 0;

		do {
			System.out.println("");
			System.out.println("1.Crear fichero numNaturales.txt con numeros"
					+ " del 1 al 100.");
			System.out.println("2.Sumar los numeros del fichero deseado.");
			System.out.println("3.Crear un fichero y su contenido.");
			System.out.println("4.Mostrar contenido del fichero deseado ("
					+ "porfa usa el fichero que creaste en la 3 opcion).");
			System.out.println("5.Apagar programa.");
			System.out.println("");
			opt = selMen(5);
			switch (opt) {
			case 1:
				yi();
				break;
			case 2:
				System.out.println("Introduce el nombre del metodo:");
				String nom = sc.nextLine();
				er(nom);
				break;
			case 3:
				System.out.println("Introduce el nombre del fichero:");
				nom = sc.nextLine();
				System.out.println("Introduce el contenido del fichero:");
				String tex = sc.nextLine();
				san(nom, tex);
				break;
			case 4:
				System.out.println("Introduce el nombre del fichero");
				String nom2 = sc.nextLine();
				shi(nom2);
				break;
			case 5:
				System.out.println("");
				System.out.println("Programa apagado");
				break;
			}
		} while (opt != 5);
		sc.close();
	}
	
	/** El siguiente método crea el fichero <i>"numNaturales"</i. Dicho fichero
	 * contendrá los numeros naturales del 0 al 100.
	 * Este fichero será <i>".txt"</i> y se creará en la siguiente ruta:
	 * <i>"C:\\Users\\Erjie\\Desktop\\DAM"</i>
	 * 
	 * <b>Exceptions</b>
	 * 1.<i>FileNotFoundException</i>. Si el programa no localiza el fichero en
	 * la direccion senalizada.
	 * 2.<i>IOException</i>. Se lanza cuando ocurre algún problema del paquete
	 * IO.
	 */
	public static void yi() {
		FileWriter fileWr = null;
		try {
			fileWr = new FileWriter("C:\\Users\\Erjie\\Desktop\\DAM\\"
					+ "numNaturales.txt");
			for (int i = 0; i <= 100; i++) {
				fileWr.write(i + " ");
			}
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		try {
			fileWr.close();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		System.out.println("Fichero creado en la ruta:");
		System.out.println("C:\\Users\\Erjie\\Desktop\\DAM\\numNaturales.txt");
	}

	//NOT DONE
	/**El siguiente metodo craera un fichero cuyo nombre se dara por parametro y
	 * en ella se almacenara una serie de numeros que el usuario desee
	 * introducir.
	 * Este fichero será <i>".txt"</i> y se creará en la siguiente ruta:
	 * <i>"C:\\Users\\Erjie\\Desktop\\DAM"</i>
	 * 
	 * <b>Exceptions</b>
	 * 1.<i>FileNotFoundException</i>. Si el programa no localiza el fichero en
	 * la direccion senalizada.
	 * 2.<i>IOException</i>. Se lanza cuando ocurre algún problema del paquete
	 * IO.
	 */
	private static void er(String nomFic) {
		Scanner sc = new Scanner(System.in);
		String filRot = ("C:\\Users\\Erjie\\Desktop\\DAM\\" + nomFic + ".txt");
		int sumTot = 0;
		
		try {
			BufferedWriter bufWri = new BufferedWriter(new FileWriter(filRot));
			String aux = null;
			System.out.println("Introduzca un numero:\r\n"
					+ "(Cuando acabe pulse enter)");
			while (!(aux = sc.nextLine()).equals("")) {
				System.out.println("Introduzca un numero:\r\n"
						+ "(Cuando acabe pulse enter)");
				bufWri.write(aux);
				bufWri.newLine();
				sumTot += Integer.parseInt(aux);
			}
			bufWri.write("La suma total de los numeros es: " + sumTot);
			bufWri.close();
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		sc.close();
	}
	
	/**
	 * El metodo creara un fichero existente cuyo nombre y texto interior seran
	 * pasados por parametro.
	 * Este fichero sera <i>".txt"</i> y se encontrara en la ruta:
	 * <i>"C:\\Users\\Erjie\\Desktop\\DAM"</i>
	 * 
	 * <b>Exceptions</b>
	 * 1.<i>FileNotFoundException</i>. Si el programa no localiza el fichero en
	 * la direccion senalizada.
	 * 2.<i>IOException</i>. Se lanza cuando ocurre algún problema del paquete
	 * IO.
	 * 
	 * @param nom <i>nombre</i> del fichero
	 * @param tex <i>cadena</i> de caracteres que se introducira en el fichero
	 */
	private static void san(String nom,String tex) {
		FileWriter filWri = null;
		String rut = ("C:\\Users\\Erjie\\Desktop\\DAM");
		
		try {
			filWri = new FileWriter(rut + "\\" + nom + ".txt");
			filWri.write(tex);
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		try {
			filWri.close();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		
	}
	
	/**El siguiente metodo recibira un nombre de un fichero por parametro. Dicho
	 * fichero contendra cadenas de caracteres separados mediante asteriscos.
	 * Estos asteriscos serán eliminados y, por tanto, cada linea del fichero
	 * sera imprimido como una sola cadena. 
	 * Este fichero deberá ser <i>".txt"</i> y encontrarse en la ruta:
	 * <i>"C:\\Users\\Erjie\\Desktop\\DAM"</i>
	 * 
	 * @param nomFic nombre del fichero
	 */
	private static void shi(String nomFic) {
		
	}
	
	private static int selMen(int canOpc) {
		Scanner sc = new Scanner(System.in);
		System.out.println("Introduzca la opción que desee:");
		System.out.println("(Solo acepta números)");
		int opt = 0;
		do {
			opt = sc.nextInt();
		} while (opt < 1 && opt > canOpc);
		return opt;
	}

}
