package practica;

import java.io.*;
import java.util.LinkedList;
import java.util.Scanner;

/*
 *  1.Escribe un programa que escriba los 100 primeros números naturales en un
 *	archivo numNaturales.txt.
 *
 *	2.Escribe un programa que reciba el nombre de un archivo que almacena una
 *	serie de cantidades enteras positivas e imprima su suma.
 *
 *  3.Escribir un método que reciba un array de cadenas de caracteres y vuelque
 *	su contenido a un archivo cuyo nombre también se recibirá por parámetro.
 *	Las cadenas quedarán separadas en el archivo por un asterisco.
 *
 *	4.Escribir un método que reciba por parámetro el nombre de un archivo e
 *	imprima las cadenas que dicho archivo almacena (una cadena por línea). Se
 *	tendrá en cuenta que las distintas cadenas se separan en el archivo por un
 *	asterisco (que no se imprimirá).
 */

public class Practica {
	
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		String nom = sc.nextLine();
		String tex = sc.nextLine();
		san();
	}
	
	/**
	 * 
	 */
	public static void yi() {
		FileWriter fileWr = null;
		try {
			fileWr = new FileWriter("C:\\Users\\Erjie\\Desktop\\DAM\\ASD.txt");
			for (int i = 0; i <= 100; i++) {
				fileWr.write(i + "\n");
			}
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		try {
			fileWr.close();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
	}
	
	/**
	 * 
	 */
	private static void er() {
		String rutFil = "C:\\Users\\Erjie\\Desktop\\DAM\\ASD.txt";
		BufferedReader bufRd = null;
		
		try {
			bufRd = new BufferedReader(bufRd);
			int num;
			int sum = 0;
			while ((num = bufRd.read()) != -1) {
				sum += (int)num;
			}
			System.out.println("La suma de todo es " + sum);
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		try {
			bufRd.close();
		}
		catch (IOException e) {
			
		}
	}
	
	/**
	 * El metodo <b><i>san</i></b> creara un fichero cuyo nombre y texto interior
	 * seran pasados por parametro.
	 * 
	 * <b>Exceptions</b>
	 * 1.<i>FileNotFoundException</i>. Si el programa no localiza el fichero en la
	 * direccion senalizada.
	 * 2.<i>IOException</i>. <b>AYUDA</b>
	 * 
	 * @param nom <i>nombre</i> del fichero
	 * @param tex <i>cadena</i> de caracteres que se introducira en el fichero
	 */
	private static void san(String nom,String tex) {
		FileWriter filWri = null;
		String rut = ("C:\\Users\\Erjie\\Desktop\\DAM");
		
		try {
			filWri = new FileWriter(rut + "\\" + nom + ".txt");
			filWri.write(tex);
		}
		catch (FileNotFoundException e) {
			e.printStackTrace();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		try {
			filWri.close();
		}
		catch (IOException e) {
			e.printStackTrace();
		}
		
	}

}
